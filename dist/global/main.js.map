{"version":3,"sources":["/node_modules/@jsenv/core/helpers/babel/typeof/typeof.js","/node_modules/@jsenv/core/helpers/babel/arrayWithoutHoles/arrayWithoutHoles.js","/node_modules/@jsenv/core/helpers/babel/iterableToArray/iterableToArray.js","/node_modules/@jsenv/core/helpers/babel/nonIterableSpread/nonIterableSpread.js","/node_modules/@jsenv/core/helpers/babel/toConsumableArray/toConsumableArray.js","/src/internal/isComposite.js","/src/internal/global-value-path.js","/src/internal/decompose.js","/src/internal/sortRecipe.js","/src/internal/escapeString.js","/src/uneval.js"],"names":["nativeTypeOf","customTypeOf","obj","Symbol","Array","i","arr2","arr","Object","arrayWithoutHoles","iterableToArray","nonIterableSpread","isComposite","value","type","compositeWellKnownMap","primitiveWellKnownMap","getCompositeGlobalPath","getPrimitiveGlobalPath","visitGlobalObject","visitValue","visitProperty","descriptor","e","propertyValue","decompose","functionAllowed","prototypeStrict","valueMap","recipeArray","valueToIdentifier","path","existingIdentifier","identifierForPrimitive","identifier","identifierForNewValue","primitiveToRecipe","createPromiseAreNotSupportedMessage","createWeakSetAreNotSupportedMessage","createWeakMapAreNotSupportedMessage","createForbiddenFunctionMessage","identifierForComposite","compositeGlobalPath","createGlobalReferenceRecipe","propertyDescriptionArray","propertyDescriptor","propertyNameIdentifier","propertyDescription","computePropertyDescription","symbolDescriptionArray","symbolIdentifier","symbol","methodDescriptionArray","computeMethodDescriptionArray","extensible","createCompositeRecipe","createForbiddenPropertySetterMessage","propertyNameOrSymbol","createForbiddenPropertyGetterMessage","configurable","writable","enumerable","getIdentifier","String","setIdentifier","valueIdentifier","undefined","callArray","entryValueIdentifier","methodNameIdentifier","entryKeyIdentifier","existingValue","nextIdentifier","currentIdentifier","parseInt","mainIdentifier","prototypeValueToIdentifier","prototypeValue","prototypeExistingIdentifier","prototypeIdentifier","prototypeGlobalPath","createUnknownPrototypeMessage","identifierForValueOf","valueOfReturnValue","createUnexpectedValueOfReturnValueMessage","recipe","valueOfIdentifier","symbolToRecipe","createPimitiveRecipe","globalSymbolKey","createGlobalSymbolRecipe","symbolGlobalPath","createUnknownSymbolMessage","key","sortRecipe","findInRecipePrototypeChain","currentRecipe","callback","recipeArrayOrdered","leftType","leftRecipe","rightType","rightRecipe","rightRecipeIsInLeftRecipePrototypeChain","recipeCandidate","leftRecipeIsInRightRecipePrototypeChain","leftIndex","rightIndex","escapeString","string","j","escapedString","char","escapedChar","uneval","recipeArraySorted","source","variableNameMap","indexSorted","identifierToVariableName","recipeToSetupSource","primitiveRecipeToSetupSource","globalSymbolRecipeToSetupSource","globalReferenceRecipeToSetupSource","compositeRecipeToSetupSource","pathSource","prototypeConstructor","recipeVariableName","recipeToMutateSource","compositeRecipeToMutateSource","mutateSource","generateDefinePropertySource","generateMethodCallSource","generatePreventExtensionSource","propertyOrSymbolVariableName","propertyDescriptorSource","generatePropertyDescriptorSource","methodCallSource","methodVariableName","argumentVariableNames"],"mappings":"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","sourcesContent":["const nativeTypeOf = (obj) => typeof obj\n\nconst customTypeOf = (obj) => {\n  return obj &&\n    typeof Symbol === \"function\" &&\n    obj.constructor === Symbol &&\n    obj !== Symbol.prototype\n    ? \"symbol\"\n    : typeof obj\n}\n\nexport default typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\"\n  ? nativeTypeOf\n  : customTypeOf\n","// eslint-disable-next-line consistent-return\nexport default (arr) => {\n  if (Array.isArray(arr)) {\n    var i = 0\n    var arr2 = new Array(arr.length)\n    for (; i < arr.length; i++) arr2[i] = arr[i]\n    return arr2\n  }\n}\n","// eslint-disable-next-line consistent-return\nexport default (iter) => {\n  if (\n    Symbol.iterator in Object(iter) ||\n    Object.prototype.toString.call(iter) === \"[object Arguments]\"\n  )\n    return Array.from(iter)\n}\n","export default () => {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\")\n}\n","import arrayWithoutHoles from \"../arrayWithoutHoles/arrayWithoutHoles.js\"\nimport iterableToArray from \"../iterableToArray/iterableToArray.js\"\nimport nonIterableSpread from \"../nonIterableSpread/nonIterableSpread.js\"\n\nexport default (arr) => arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread()\n","// https://developer.mozilla.org/en-US/docs/Glossary/Primitive\n\nexport const isComposite = (value) => {\n  if (value === null) return false\n  const type = typeof value\n  if (type === \"object\") return true\n  if (type === \"function\") return true\n  return false\n}\n","import { isComposite } from \"./isComposite.js\"\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\nconst compositeWellKnownMap = new WeakMap()\nconst primitiveWellKnownMap = new Map()\n\nexport const getCompositeGlobalPath = (value) => compositeWellKnownMap.get(value)\n\nexport const getPrimitiveGlobalPath = (value) => primitiveWellKnownMap.get(value)\n\nconst visitGlobalObject = (value) => {\n  const visitValue = (value, path) => {\n    if (isComposite(value)) {\n      if (compositeWellKnownMap.has(value)) return // prevent infinite recursion\n      compositeWellKnownMap.set(value, path)\n\n      const visitProperty = (property) => {\n        let descriptor\n        try {\n          descriptor = Object.getOwnPropertyDescriptor(value, property)\n        } catch (e) {\n          if (e.name === \"SecurityError\") {\n            return\n          }\n          throw e\n        }\n\n        // do not trigger getter/setter\n        if (\"value\" in descriptor) {\n          const propertyValue = descriptor.value\n          visitValue(propertyValue, [...path, property])\n        }\n      }\n\n      Object.getOwnPropertyNames(value).forEach((name) => visitProperty(name))\n      Object.getOwnPropertySymbols(value).forEach((symbol) => visitProperty(symbol))\n    }\n\n    primitiveWellKnownMap.set(value, path)\n    return\n  }\n\n  visitValue(value, [])\n}\n\nif (typeof window === \"object\") visitGlobalObject(window)\n\nif (typeof global === \"object\") visitGlobalObject(global)\n","/**\n * transforms a javascript value into an object describing it.\n *\n */\n\nimport { isComposite } from \"./isComposite.js\"\nimport { getCompositeGlobalPath, getPrimitiveGlobalPath } from \"./global-value-path.js\"\n\nexport const decompose = (mainValue, { functionAllowed, prototypeStrict }) => {\n  const valueMap = {}\n  const recipeArray = []\n\n  const valueToIdentifier = (value, path = []) => {\n    if (!isComposite(value)) {\n      const existingIdentifier = identifierForPrimitive(value)\n      if (existingIdentifier !== undefined) return existingIdentifier\n      const identifier = identifierForNewValue(value)\n      recipeArray[identifier] = primitiveToRecipe(value)\n      return identifier\n    }\n\n    if (typeof Promise === \"function\" && value instanceof Promise)\n      throw new Error(createPromiseAreNotSupportedMessage({ path }))\n    if (typeof WeakSet === \"function\" && value instanceof WeakSet)\n      throw new Error(createWeakSetAreNotSupportedMessage({ path }))\n    if (typeof WeakMap === \"function\" && value instanceof WeakMap)\n      throw new Error(createWeakMapAreNotSupportedMessage({ path }))\n    if (typeof value === \"function\" && !functionAllowed)\n      throw new Error(createForbiddenFunctionMessage({ path }))\n\n    const existingIdentifier = identifierForComposite(value)\n    if (existingIdentifier !== undefined) return existingIdentifier\n    const identifier = identifierForNewValue(value)\n\n    const compositeGlobalPath = getCompositeGlobalPath(value)\n    if (compositeGlobalPath) {\n      recipeArray[identifier] = createGlobalReferenceRecipe(compositeGlobalPath)\n      return identifier\n    }\n\n    const propertyDescriptionArray = []\n    Object.getOwnPropertyNames(value).forEach((propertyName) => {\n      const propertyDescriptor = Object.getOwnPropertyDescriptor(value, propertyName)\n      const propertyNameIdentifier = valueToIdentifier(propertyName, [...path, propertyName])\n      const propertyDescription = computePropertyDescription(propertyDescriptor, propertyName, path)\n      propertyDescriptionArray.push({ propertyNameIdentifier, propertyDescription })\n    })\n\n    const symbolDescriptionArray = []\n    Object.getOwnPropertySymbols(value).forEach((symbol) => {\n      const propertyDescriptor = Object.getOwnPropertyDescriptor(value, symbol)\n      const symbolIdentifier = valueToIdentifier(symbol, [...path, `[${symbol.toString()}]`])\n      const propertyDescription = computePropertyDescription(propertyDescriptor, symbol, path)\n      symbolDescriptionArray.push({ symbolIdentifier, propertyDescription })\n    })\n\n    const methodDescriptionArray = computeMethodDescriptionArray(value, path)\n\n    const extensible = Object.isExtensible(value)\n\n    recipeArray[identifier] = createCompositeRecipe({\n      propertyDescriptionArray,\n      symbolDescriptionArray,\n      methodDescriptionArray,\n      extensible,\n    })\n    return identifier\n  }\n\n  const computePropertyDescription = (propertyDescriptor, propertyNameOrSymbol, path) => {\n    if (propertyDescriptor.set && !functionAllowed)\n      throw new Error(createForbiddenPropertySetterMessage({ path, propertyNameOrSymbol }))\n    if (propertyDescriptor.get && !functionAllowed)\n      throw new Error(createForbiddenPropertyGetterMessage({ path, propertyNameOrSymbol }))\n\n    return {\n      configurable: propertyDescriptor.configurable,\n      writable: propertyDescriptor.writable,\n      enumerable: propertyDescriptor.enumerable,\n      getIdentifier:\n        \"get\" in propertyDescriptor\n          ? valueToIdentifier(propertyDescriptor.get, [\n              ...path,\n              String(propertyNameOrSymbol),\n              \"[[descriptor:get]]\",\n            ])\n          : undefined,\n      setIdentifier:\n        \"set\" in propertyDescriptor\n          ? valueToIdentifier(propertyDescriptor.set, [\n              ...path,\n              String(propertyNameOrSymbol),\n              \"[[descriptor:set]]\",\n            ])\n          : undefined,\n      valueIdentifier:\n        \"value\" in propertyDescriptor\n          ? valueToIdentifier(propertyDescriptor.value, [\n              ...path,\n              String(propertyNameOrSymbol),\n              \"[[descriptor:value]]\",\n            ])\n          : undefined,\n    }\n  }\n\n  const computeMethodDescriptionArray = (value, path) => {\n    const methodDescriptionArray = []\n\n    if (typeof Set === \"function\" && value instanceof Set) {\n      const callArray = []\n      value.forEach((entryValue, index) => {\n        const entryValueIdentifier = valueToIdentifier(entryValue, [\n          ...path,\n          `[[SetEntryValue]]`,\n          index,\n        ])\n        callArray.push([entryValueIdentifier])\n      })\n      methodDescriptionArray.push({ methodNameIdentifier: valueToIdentifier(\"add\"), callArray })\n    }\n\n    if (typeof Map === \"function\" && value instanceof Map) {\n      const callArray = []\n      value.forEach((entryValue, entryKey) => {\n        const entryKeyIdentifier = valueToIdentifier(entryKey, [\n          ...path,\n          \"[[MapEntryKey]]\",\n          entryKey,\n        ])\n        const entryValueIdentifier = valueToIdentifier(entryValue, [\n          ...path,\n          \"[[MapEntryValue]]\",\n          entryValue,\n        ])\n        callArray.push([entryKeyIdentifier, entryValueIdentifier])\n      })\n      methodDescriptionArray.push({ methodNameIdentifier: valueToIdentifier(\"set\"), callArray })\n    }\n\n    return methodDescriptionArray\n  }\n\n  const identifierForPrimitive = (value) => {\n    return Object.keys(valueMap).find((existingIdentifier) => {\n      const existingValue = valueMap[existingIdentifier]\n      if (Object.is(value, existingValue)) return true\n      return value === existingValue\n    })\n  }\n\n  const identifierForComposite = (value) => {\n    return Object.keys(valueMap).find((existingIdentifier) => {\n      const existingValue = valueMap[existingIdentifier]\n      return value === existingValue\n    })\n  }\n\n  const identifierForNewValue = (value) => {\n    const identifier = nextIdentifier()\n    valueMap[identifier] = value\n    return identifier\n  }\n\n  let currentIdentifier = -1\n  const nextIdentifier = () => {\n    const identifier = String(parseInt(currentIdentifier) + 1)\n    currentIdentifier = identifier\n    return identifier\n  }\n\n  const mainIdentifier = valueToIdentifier(mainValue)\n\n  // prototype, important to keep after the whole structure was visited\n  // so that we discover if any prototype is part of the value\n  const prototypeValueToIdentifier = (prototypeValue) => {\n    // prototype is null\n    if (prototypeValue === null) return valueToIdentifier(prototypeValue)\n\n    // prototype found somewhere already\n    const prototypeExistingIdentifier = identifierForComposite(prototypeValue)\n    if (prototypeExistingIdentifier !== undefined) return prototypeExistingIdentifier\n\n    // mark prototype as visited\n    const prototypeIdentifier = identifierForNewValue(prototypeValue)\n\n    // prototype is a global reference ?\n    const prototypeGlobalPath = getCompositeGlobalPath(prototypeValue)\n    if (prototypeGlobalPath) {\n      recipeArray[prototypeIdentifier] = createGlobalReferenceRecipe(prototypeGlobalPath)\n      return prototypeIdentifier\n    }\n\n    // otherwise prototype is unknown\n    if (prototypeStrict) {\n      throw new Error(createUnknownPrototypeMessage({ prototypeValue }))\n    }\n\n    return prototypeValueToIdentifier(Object.getPrototypeOf(prototypeValue), true)\n  }\n  const identifierForValueOf = (value, path = []) => {\n    if (value instanceof Array) return valueToIdentifier(value.length, [...path, \"length\"])\n\n    if (\"valueOf\" in value === false) return undefined\n\n    if (typeof value.valueOf !== \"function\") return undefined\n\n    const valueOfReturnValue = value.valueOf()\n    if (!isComposite(valueOfReturnValue))\n      return valueToIdentifier(valueOfReturnValue, [...path, \"valueOf()\"])\n\n    if (valueOfReturnValue === value) return undefined\n\n    throw new Error(createUnexpectedValueOfReturnValueMessage())\n  }\n\n  recipeArray.slice().forEach((recipe, index) => {\n    if (recipe.type === \"composite\") {\n      const value = valueMap[index]\n\n      if (typeof value === \"function\") {\n        const valueOfIdentifier = nextIdentifier()\n        recipeArray[valueOfIdentifier] = {\n          type: \"primitive\",\n          value,\n        }\n        recipe.valueOfIdentifier = valueOfIdentifier\n        return\n      }\n\n      if (value instanceof RegExp) {\n        const valueOfIdentifier = nextIdentifier()\n        recipeArray[valueOfIdentifier] = {\n          type: \"primitive\",\n          value,\n        }\n        recipe.valueOfIdentifier = valueOfIdentifier\n        return\n      }\n\n      // valueOf, mandatory to uneval new Date(10) for instance.\n      recipe.valueOfIdentifier = identifierForValueOf(value)\n      const prototypeValue = Object.getPrototypeOf(value)\n      recipe.prototypeIdentifier = prototypeValueToIdentifier(prototypeValue, true)\n    }\n  })\n\n  return {\n    recipeArray,\n    mainIdentifier,\n    valueMap,\n  }\n}\n\nconst primitiveToRecipe = (value) => {\n  if (typeof value === \"symbol\") return symbolToRecipe(value)\n\n  return createPimitiveRecipe(value)\n}\n\nconst symbolToRecipe = (symbol) => {\n  const globalSymbolKey = Symbol.keyFor(symbol)\n  if (globalSymbolKey !== undefined) return createGlobalSymbolRecipe(globalSymbolKey)\n\n  const symbolGlobalPath = getPrimitiveGlobalPath(symbol)\n  if (!symbolGlobalPath) throw new Error(createUnknownSymbolMessage({ symbol }))\n\n  return createGlobalReferenceRecipe(symbolGlobalPath)\n}\n\nconst createPimitiveRecipe = (value) => {\n  return {\n    type: \"primitive\",\n    value,\n  }\n}\n\nconst createGlobalReferenceRecipe = (path) => {\n  const recipe = {\n    type: \"global-reference\",\n    path,\n  }\n  return recipe\n}\n\nconst createGlobalSymbolRecipe = (key) => {\n  return {\n    type: \"global-symbol\",\n    key,\n  }\n}\n\nconst createCompositeRecipe = ({\n  prototypeIdentifier,\n  valueOfIdentifier,\n  propertyDescriptionArray,\n  symbolDescriptionArray,\n  methodDescriptionArray,\n  extensible,\n}) => {\n  return {\n    type: \"composite\",\n    prototypeIdentifier,\n    valueOfIdentifier,\n    propertyDescriptionArray,\n    symbolDescriptionArray,\n    methodDescriptionArray,\n    extensible,\n  }\n}\n\nconst createPromiseAreNotSupportedMessage = ({ path }) => {\n  if (path.length === 0) return `promise are not supported.`\n\n  return `promise are not supported.\npromise found at: ${path.join(\"\")}`\n}\n\nconst createWeakSetAreNotSupportedMessage = ({ path }) => {\n  if (path.length === 0) return `weakSet are not supported.`\n\n  return `weakSet are not supported.\nweakSet found at: ${path.join(\"\")}`\n}\n\nconst createWeakMapAreNotSupportedMessage = ({ path }) => {\n  if (path.length === 0) return `weakMap are not supported.`\n\n  return `weakMap are not supported.\nweakMap found at: ${path.join(\"\")}`\n}\n\nconst createForbiddenFunctionMessage = ({ path }) => {\n  if (path.length === 0) return `function are not allowed.`\n\n  return `function are not allowed.\nfunction found at: ${path.join(\"\")}`\n}\n\nconst createForbiddenPropertyGetterMessage = ({\n  path,\n  propertyNameOrSymbol,\n}) => `property getter are not allowed.\ngetter found on property: ${String(propertyNameOrSymbol)}\nat: ${path.join(\"\")}`\n\nconst createForbiddenPropertySetterMessage = ({\n  path,\n  propertyNameOrSymbol,\n}) => `property setter are not allowed.\nsetter found on property: ${String(propertyNameOrSymbol)}\nat: ${path.join(\"\")}`\n\nconst createUnexpectedValueOfReturnValueMessage = () =>\n  `valueOf() must return a primitive of the object itself.`\n\nconst createUnknownSymbolMessage = ({\n  symbol,\n}) => `symbol must be global, like Symbol.iterator, or created using Symbol.for().\nsymbol: ${symbol.toString()}`\n\nconst createUnknownPrototypeMessage = ({ prototypeValue }) =>\n  `prototype must be global, like Object.prototype, or somewhere in the value.\nprototype constructor name: ${prototypeValue.constructor.name}`\n","// be carefull because this function is mutating recipe objects inside the recipeArray.\n// this is not an issue because each recipe object is not accessible from the outside\n// when used internally by uneval\nexport const sortRecipe = (recipeArray) => {\n  const findInRecipePrototypeChain = (recipe, callback) => {\n    let currentRecipe = recipe\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      if (currentRecipe.type !== \"composite\") break\n      const prototypeIdentifier = currentRecipe.prototypeIdentifier\n      if (prototypeIdentifier === undefined) break\n      currentRecipe = recipeArray[prototypeIdentifier]\n\n      if (callback(currentRecipe, prototypeIdentifier)) return prototypeIdentifier\n    }\n    return undefined\n  }\n\n  const recipeArrayOrdered = recipeArray.slice()\n  recipeArrayOrdered.sort((leftRecipe, rightRecipe) => {\n    const leftType = leftRecipe.type\n    const rightType = rightRecipe.type\n\n    if (leftType === \"composite\" && rightType === \"composite\") {\n      const rightRecipeIsInLeftRecipePrototypeChain = findInRecipePrototypeChain(\n        leftRecipe,\n        (recipeCandidate) => recipeCandidate === rightRecipe,\n      )\n      // if left recipe requires right recipe, left must be after right\n      if (rightRecipeIsInLeftRecipePrototypeChain) return 1\n\n      const leftRecipeIsInRightRecipePrototypeChain = findInRecipePrototypeChain(\n        rightRecipe,\n        (recipeCandidate) => recipeCandidate === leftRecipe,\n      )\n      // if right recipe requires left recipe, right must be after left\n      if (leftRecipeIsInRightRecipePrototypeChain) return -1\n    }\n\n    if (leftType !== rightType) {\n      // if left is a composite, left must be after right\n      if (leftType === \"composite\") return 1\n      // if right is a composite, right must be after left\n      if (rightType === \"composite\") return -1\n    }\n\n    const leftIndex = recipeArray.indexOf(leftRecipe)\n    const rightIndex = recipeArray.indexOf(rightRecipe)\n    // left was before right, don't change that\n    if (leftIndex < rightIndex) return -1\n    // right was after left, don't change that\n    return 1\n  })\n\n  return recipeArrayOrdered\n}\n","// https://github.com/joliss/js-string-escape/blob/master/index.js\n// http://javascript.crockford.com/remedial.html\nexport const escapeString = (value) => {\n  const string = String(value)\n  let i = 0\n  const j = string.length\n  var escapedString = \"\"\n  while (i < j) {\n    const char = string[i]\n    let escapedChar\n    if (char === '\"' || char === \"'\" || char === \"\\\\\") {\n      escapedChar = `\\\\${char}`\n    } else if (char === \"\\n\") {\n      escapedChar = \"\\\\n\"\n    } else if (char === \"\\r\") {\n      escapedChar = \"\\\\r\"\n    } else if (char === \"\\u2028\") {\n      escapedChar = \"\\\\u2028\"\n    } else if (char === \"\\u2029\") {\n      escapedChar = \"\\\\u2029\"\n    } else {\n      escapedChar = char\n    }\n    escapedString += escapedChar\n    i++\n  }\n  return escapedString\n}\n","import { decompose } from \"./internal/decompose.js\"\nimport { sortRecipe } from \"./internal/sortRecipe.js\"\nimport { escapeString } from \"./internal/escapeString.js\"\n\nexport const uneval = (value, { functionAllowed = false, prototypeStrict = false } = {}) => {\n  const { recipeArray, mainIdentifier, valueMap } = decompose(value, {\n    functionAllowed,\n    prototypeStrict,\n  })\n  const recipeArraySorted = sortRecipe(recipeArray)\n\n  let source = `(function () {\nObject.defineProperty(Object.prototype, \"__global__\", {\n  get: function () { return this },\n  configurable: true,\n});\nvar globalObject = __global__;\ndelete Object.prototype.__global__;\n\nfunction safeDefineProperty(object, propertyNameOrSymbol, descriptor) {\n  var currentDescriptor = Object.getOwnPropertyDescriptor(object, propertyNameOrSymbol);\n  if (currentDescriptor && !currentDescriptor.configurable) return\n  Object.defineProperty(object, propertyNameOrSymbol, descriptor)\n};\n`\n\n  const variableNameMap = {}\n  recipeArray.forEach((recipe, index) => {\n    const indexSorted = recipeArraySorted.indexOf(recipe)\n    variableNameMap[index] = `_${indexSorted}`\n  })\n\n  const identifierToVariableName = (identifier) => variableNameMap[identifier]\n\n  const recipeToSetupSource = (recipe) => {\n    if (recipe.type === \"primitive\") return primitiveRecipeToSetupSource(recipe)\n    if (recipe.type === \"global-symbol\") return globalSymbolRecipeToSetupSource(recipe)\n    if (recipe.type === \"global-reference\") return globalReferenceRecipeToSetupSource(recipe)\n    return compositeRecipeToSetupSource(recipe)\n  }\n\n  const primitiveRecipeToSetupSource = ({ value }) => {\n    if (typeof value === \"string\") return `\"${escapeString(value)}\";`\n    if (Object.is(value, -0)) return \"-0;\"\n    return `${String(value)};`\n  }\n\n  const globalSymbolRecipeToSetupSource = (recipe) => {\n    return `Symbol.for(\"${escapeString(recipe.key)}\");`\n  }\n\n  const globalReferenceRecipeToSetupSource = (recipe) => {\n    const pathSource = recipe.path.map((part) => `[\"${escapeString(part)}\"]`).join(\"\")\n    return `globalObject${pathSource};`\n  }\n\n  const compositeRecipeToSetupSource = ({ prototypeIdentifier, valueOfIdentifier }) => {\n    if (prototypeIdentifier === undefined) return identifierToVariableName(valueOfIdentifier)\n\n    const prototypeValue = valueMap[prototypeIdentifier]\n    if (prototypeValue === null) return `Object.create(null);`\n\n    const prototypeConstructor = prototypeValue.constructor\n    if (prototypeConstructor === Object)\n      return `Object.create(${identifierToVariableName(prototypeIdentifier)});`\n\n    if (valueOfIdentifier === undefined) return `new ${prototypeConstructor.name}();`\n\n    return `new ${prototypeConstructor.name}(${identifierToVariableName(valueOfIdentifier)});`\n  }\n\n  recipeArraySorted.forEach((recipe) => {\n    const recipeVariableName = identifierToVariableName(recipeArray.indexOf(recipe))\n    source += `var ${recipeVariableName} = ${recipeToSetupSource(recipe, recipeVariableName)}\n`\n  })\n\n  const recipeToMutateSource = (recipe, recipeVariableName) => {\n    if (recipe.type === \"composite\")\n      return compositeRecipeToMutateSource(recipe, recipeVariableName)\n    return ``\n  }\n\n  const compositeRecipeToMutateSource = (\n    { propertyDescriptionArray, symbolDescriptionArray, methodDescriptionArray, extensible },\n    recipeVariableName,\n  ) => {\n    let mutateSource = ``\n\n    propertyDescriptionArray.forEach(({ propertyNameIdentifier, propertyDescription }) => {\n      mutateSource += generateDefinePropertySource(\n        recipeVariableName,\n        propertyNameIdentifier,\n        propertyDescription,\n      )\n    })\n\n    symbolDescriptionArray.forEach(({ symbolIdentifier, propertyDescription }) => {\n      mutateSource += generateDefinePropertySource(\n        recipeVariableName,\n        symbolIdentifier,\n        propertyDescription,\n      )\n    })\n\n    methodDescriptionArray.forEach(({ methodNameIdentifier, callArray }) => {\n      mutateSource += generateMethodCallSource(recipeVariableName, methodNameIdentifier, callArray)\n    })\n\n    if (!extensible) {\n      mutateSource += generatePreventExtensionSource(recipeVariableName)\n    }\n\n    return mutateSource\n  }\n\n  const generateDefinePropertySource = (\n    recipeVariableName,\n    propertyNameOrSymbolIdentifier,\n    propertyDescription,\n  ) => {\n    const propertyOrSymbolVariableName = identifierToVariableName(propertyNameOrSymbolIdentifier)\n\n    const propertyDescriptorSource = generatePropertyDescriptorSource(propertyDescription)\n    return `safeDefineProperty(${recipeVariableName}, ${propertyOrSymbolVariableName}, ${propertyDescriptorSource});`\n  }\n\n  const generatePropertyDescriptorSource = ({\n    configurable,\n    writable,\n    enumerable,\n    getIdentifier,\n    setIdentifier,\n    valueIdentifier,\n  }) => {\n    if (valueIdentifier === undefined) {\n      return `{\n  configurable: ${configurable},\n  enumerable: ${enumerable},\n  get: ${getIdentifier === undefined ? undefined : identifierToVariableName(getIdentifier)},\n  set: ${setIdentifier === undefined ? undefined : identifierToVariableName(setIdentifier)},\n}`\n    }\n\n    return `{\n  configurable: ${configurable},\n  writable: ${writable},\n  enumerable: ${enumerable},\n  value: ${valueIdentifier === undefined ? undefined : identifierToVariableName(valueIdentifier)}\n}`\n  }\n\n  const generateMethodCallSource = (recipeVariableName, methodNameIdentifier, callArray) => {\n    let methodCallSource = ``\n\n    const methodVariableName = identifierToVariableName(methodNameIdentifier)\n    callArray.forEach((argumentIdentifiers) => {\n      const argumentVariableNames = argumentIdentifiers.map((argumentIdentifier) =>\n        identifierToVariableName(argumentIdentifier),\n      )\n\n      methodCallSource += `${recipeVariableName}[${methodVariableName}](${argumentVariableNames.join(\n        \",\",\n      )});`\n    })\n\n    return methodCallSource\n  }\n\n  const generatePreventExtensionSource = (recipeVariableName) => {\n    return `Object.preventExtensions(${recipeVariableName});`\n  }\n\n  recipeArraySorted.forEach((recipe) => {\n    const recipeVariableName = identifierToVariableName(recipeArray.indexOf(recipe))\n    source += `${recipeToMutateSource(recipe, recipeVariableName)}`\n  })\n\n  source += `return ${identifierToVariableName(mainIdentifier)}; })()`\n\n  return source\n}\n"]}