{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../src/internal/isComposite.js",
    "../../src/internal/global-value-path.js",
    "../../src/internal/decompose.js",
    "../../src/internal/sortRecipe.js",
    "../../src/internal/escapeString.js",
    "../../src/uneval.js"
  ],
  "sourcesContent": [
    "// https://developer.mozilla.org/en-US/docs/Glossary/Primitive\n\nexport const isComposite = (value) => {\n  if (value === null) return false\n  const type = typeof value\n  if (type === \"object\") return true\n  if (type === \"function\") return true\n  return false\n}\n",
    "import { isComposite } from \"./isComposite.js\"\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\nconst compositeWellKnownMap = new WeakMap()\nconst primitiveWellKnownMap = new Map()\n\nexport const getCompositeGlobalPath = (value) => compositeWellKnownMap.get(value)\n\nexport const getPrimitiveGlobalPath = (value) => primitiveWellKnownMap.get(value)\n\nconst visitGlobalObject = (value) => {\n  const visitValue = (value, path) => {\n    if (isComposite(value)) {\n      if (compositeWellKnownMap.has(value)) return // prevent infinite recursion\n      compositeWellKnownMap.set(value, path)\n\n      const visitProperty = (property) => {\n        let descriptor\n        try {\n          descriptor = Object.getOwnPropertyDescriptor(value, property)\n        } catch (e) {\n          if (e.name === \"SecurityError\") {\n            return\n          }\n          throw e\n        }\n\n        if (!descriptor) {\n          // it's apparently possible to have getOwnPropertyNames returning\n          // a property that later returns a null descriptor\n          // for instance window.showModalDialog in webkit 13.0\n          return\n        }\n\n        // do not trigger getter/setter\n        if (\"value\" in descriptor) {\n          const propertyValue = descriptor.value\n          visitValue(propertyValue, [...path, property])\n        }\n      }\n\n      Object.getOwnPropertyNames(value).forEach((name) => visitProperty(name))\n      Object.getOwnPropertySymbols(value).forEach((symbol) => visitProperty(symbol))\n    }\n\n    primitiveWellKnownMap.set(value, path)\n    return\n  }\n\n  visitValue(value, [])\n}\n\nif (typeof window === \"object\") visitGlobalObject(window)\n\nif (typeof global === \"object\") visitGlobalObject(global)\n",
    "/**\n * transforms a javascript value into an object describing it.\n *\n */\n\nimport { isComposite } from \"./isComposite.js\"\nimport { getCompositeGlobalPath, getPrimitiveGlobalPath } from \"./global-value-path.js\"\n\nexport const decompose = (mainValue, { functionAllowed, prototypeStrict }) => {\n  const valueMap = {}\n  const recipeArray = []\n\n  const valueToIdentifier = (value, path = []) => {\n    if (!isComposite(value)) {\n      const existingIdentifier = identifierForPrimitive(value)\n      if (existingIdentifier !== undefined) return existingIdentifier\n      const identifier = identifierForNewValue(value)\n      recipeArray[identifier] = primitiveToRecipe(value)\n      return identifier\n    }\n\n    if (typeof Promise === \"function\" && value instanceof Promise)\n      throw new Error(createPromiseAreNotSupportedMessage({ path }))\n    if (typeof WeakSet === \"function\" && value instanceof WeakSet)\n      throw new Error(createWeakSetAreNotSupportedMessage({ path }))\n    if (typeof WeakMap === \"function\" && value instanceof WeakMap)\n      throw new Error(createWeakMapAreNotSupportedMessage({ path }))\n    if (typeof value === \"function\" && !functionAllowed)\n      throw new Error(createForbiddenFunctionMessage({ path }))\n\n    const existingIdentifier = identifierForComposite(value)\n    if (existingIdentifier !== undefined) return existingIdentifier\n    const identifier = identifierForNewValue(value)\n\n    const compositeGlobalPath = getCompositeGlobalPath(value)\n    if (compositeGlobalPath) {\n      recipeArray[identifier] = createGlobalReferenceRecipe(compositeGlobalPath)\n      return identifier\n    }\n\n    const propertyDescriptionArray = []\n    Object.getOwnPropertyNames(value).forEach((propertyName) => {\n      const propertyDescriptor = Object.getOwnPropertyDescriptor(value, propertyName)\n      const propertyNameIdentifier = valueToIdentifier(propertyName, [...path, propertyName])\n      const propertyDescription = computePropertyDescription(propertyDescriptor, propertyName, path)\n      propertyDescriptionArray.push({ propertyNameIdentifier, propertyDescription })\n    })\n\n    const symbolDescriptionArray = []\n    Object.getOwnPropertySymbols(value).forEach((symbol) => {\n      const propertyDescriptor = Object.getOwnPropertyDescriptor(value, symbol)\n      const symbolIdentifier = valueToIdentifier(symbol, [...path, `[${symbol.toString()}]`])\n      const propertyDescription = computePropertyDescription(propertyDescriptor, symbol, path)\n      symbolDescriptionArray.push({ symbolIdentifier, propertyDescription })\n    })\n\n    const methodDescriptionArray = computeMethodDescriptionArray(value, path)\n\n    const extensible = Object.isExtensible(value)\n\n    recipeArray[identifier] = createCompositeRecipe({\n      propertyDescriptionArray,\n      symbolDescriptionArray,\n      methodDescriptionArray,\n      extensible,\n    })\n    return identifier\n  }\n\n  const computePropertyDescription = (propertyDescriptor, propertyNameOrSymbol, path) => {\n    if (propertyDescriptor.set && !functionAllowed)\n      throw new Error(createForbiddenPropertySetterMessage({ path, propertyNameOrSymbol }))\n    if (propertyDescriptor.get && !functionAllowed)\n      throw new Error(createForbiddenPropertyGetterMessage({ path, propertyNameOrSymbol }))\n\n    return {\n      configurable: propertyDescriptor.configurable,\n      writable: propertyDescriptor.writable,\n      enumerable: propertyDescriptor.enumerable,\n      getIdentifier:\n        \"get\" in propertyDescriptor\n          ? valueToIdentifier(propertyDescriptor.get, [\n              ...path,\n              String(propertyNameOrSymbol),\n              \"[[descriptor:get]]\",\n            ])\n          : undefined,\n      setIdentifier:\n        \"set\" in propertyDescriptor\n          ? valueToIdentifier(propertyDescriptor.set, [\n              ...path,\n              String(propertyNameOrSymbol),\n              \"[[descriptor:set]]\",\n            ])\n          : undefined,\n      valueIdentifier:\n        \"value\" in propertyDescriptor\n          ? valueToIdentifier(propertyDescriptor.value, [\n              ...path,\n              String(propertyNameOrSymbol),\n              \"[[descriptor:value]]\",\n            ])\n          : undefined,\n    }\n  }\n\n  const computeMethodDescriptionArray = (value, path) => {\n    const methodDescriptionArray = []\n\n    if (typeof Set === \"function\" && value instanceof Set) {\n      const callArray = []\n      value.forEach((entryValue, index) => {\n        const entryValueIdentifier = valueToIdentifier(entryValue, [\n          ...path,\n          `[[SetEntryValue]]`,\n          index,\n        ])\n        callArray.push([entryValueIdentifier])\n      })\n      methodDescriptionArray.push({ methodNameIdentifier: valueToIdentifier(\"add\"), callArray })\n    }\n\n    if (typeof Map === \"function\" && value instanceof Map) {\n      const callArray = []\n      value.forEach((entryValue, entryKey) => {\n        const entryKeyIdentifier = valueToIdentifier(entryKey, [\n          ...path,\n          \"[[MapEntryKey]]\",\n          entryKey,\n        ])\n        const entryValueIdentifier = valueToIdentifier(entryValue, [\n          ...path,\n          \"[[MapEntryValue]]\",\n          entryValue,\n        ])\n        callArray.push([entryKeyIdentifier, entryValueIdentifier])\n      })\n      methodDescriptionArray.push({ methodNameIdentifier: valueToIdentifier(\"set\"), callArray })\n    }\n\n    return methodDescriptionArray\n  }\n\n  const identifierForPrimitive = (value) => {\n    return Object.keys(valueMap).find((existingIdentifier) => {\n      const existingValue = valueMap[existingIdentifier]\n      if (Object.is(value, existingValue)) return true\n      return value === existingValue\n    })\n  }\n\n  const identifierForComposite = (value) => {\n    return Object.keys(valueMap).find((existingIdentifier) => {\n      const existingValue = valueMap[existingIdentifier]\n      return value === existingValue\n    })\n  }\n\n  const identifierForNewValue = (value) => {\n    const identifier = nextIdentifier()\n    valueMap[identifier] = value\n    return identifier\n  }\n\n  let currentIdentifier = -1\n  const nextIdentifier = () => {\n    const identifier = String(parseInt(currentIdentifier) + 1)\n    currentIdentifier = identifier\n    return identifier\n  }\n\n  const mainIdentifier = valueToIdentifier(mainValue)\n\n  // prototype, important to keep after the whole structure was visited\n  // so that we discover if any prototype is part of the value\n  const prototypeValueToIdentifier = (prototypeValue) => {\n    // prototype is null\n    if (prototypeValue === null) return valueToIdentifier(prototypeValue)\n\n    // prototype found somewhere already\n    const prototypeExistingIdentifier = identifierForComposite(prototypeValue)\n    if (prototypeExistingIdentifier !== undefined) return prototypeExistingIdentifier\n\n    // mark prototype as visited\n    const prototypeIdentifier = identifierForNewValue(prototypeValue)\n\n    // prototype is a global reference ?\n    const prototypeGlobalPath = getCompositeGlobalPath(prototypeValue)\n    if (prototypeGlobalPath) {\n      recipeArray[prototypeIdentifier] = createGlobalReferenceRecipe(prototypeGlobalPath)\n      return prototypeIdentifier\n    }\n\n    // otherwise prototype is unknown\n    if (prototypeStrict) {\n      throw new Error(createUnknownPrototypeMessage({ prototypeValue }))\n    }\n\n    return prototypeValueToIdentifier(Object.getPrototypeOf(prototypeValue), true)\n  }\n  const identifierForValueOf = (value, path = []) => {\n    if (value instanceof Array) return valueToIdentifier(value.length, [...path, \"length\"])\n\n    if (\"valueOf\" in value === false) return undefined\n\n    if (typeof value.valueOf !== \"function\") return undefined\n\n    const valueOfReturnValue = value.valueOf()\n    if (!isComposite(valueOfReturnValue))\n      return valueToIdentifier(valueOfReturnValue, [...path, \"valueOf()\"])\n\n    if (valueOfReturnValue === value) return undefined\n\n    throw new Error(createUnexpectedValueOfReturnValueMessage())\n  }\n\n  recipeArray.slice().forEach((recipe, index) => {\n    if (recipe.type === \"composite\") {\n      const value = valueMap[index]\n\n      if (typeof value === \"function\") {\n        const valueOfIdentifier = nextIdentifier()\n        recipeArray[valueOfIdentifier] = {\n          type: \"primitive\",\n          value,\n        }\n        recipe.valueOfIdentifier = valueOfIdentifier\n        return\n      }\n\n      if (value instanceof RegExp) {\n        const valueOfIdentifier = nextIdentifier()\n        recipeArray[valueOfIdentifier] = {\n          type: \"primitive\",\n          value,\n        }\n        recipe.valueOfIdentifier = valueOfIdentifier\n        return\n      }\n\n      // valueOf, mandatory to uneval new Date(10) for instance.\n      recipe.valueOfIdentifier = identifierForValueOf(value)\n      const prototypeValue = Object.getPrototypeOf(value)\n      recipe.prototypeIdentifier = prototypeValueToIdentifier(prototypeValue, true)\n    }\n  })\n\n  return {\n    recipeArray,\n    mainIdentifier,\n    valueMap,\n  }\n}\n\nconst primitiveToRecipe = (value) => {\n  if (typeof value === \"symbol\") return symbolToRecipe(value)\n\n  return createPimitiveRecipe(value)\n}\n\nconst symbolToRecipe = (symbol) => {\n  const globalSymbolKey = Symbol.keyFor(symbol)\n  if (globalSymbolKey !== undefined) return createGlobalSymbolRecipe(globalSymbolKey)\n\n  const symbolGlobalPath = getPrimitiveGlobalPath(symbol)\n  if (!symbolGlobalPath) throw new Error(createUnknownSymbolMessage({ symbol }))\n\n  return createGlobalReferenceRecipe(symbolGlobalPath)\n}\n\nconst createPimitiveRecipe = (value) => {\n  return {\n    type: \"primitive\",\n    value,\n  }\n}\n\nconst createGlobalReferenceRecipe = (path) => {\n  const recipe = {\n    type: \"global-reference\",\n    path,\n  }\n  return recipe\n}\n\nconst createGlobalSymbolRecipe = (key) => {\n  return {\n    type: \"global-symbol\",\n    key,\n  }\n}\n\nconst createCompositeRecipe = ({\n  prototypeIdentifier,\n  valueOfIdentifier,\n  propertyDescriptionArray,\n  symbolDescriptionArray,\n  methodDescriptionArray,\n  extensible,\n}) => {\n  return {\n    type: \"composite\",\n    prototypeIdentifier,\n    valueOfIdentifier,\n    propertyDescriptionArray,\n    symbolDescriptionArray,\n    methodDescriptionArray,\n    extensible,\n  }\n}\n\nconst createPromiseAreNotSupportedMessage = ({ path }) => {\n  if (path.length === 0) return `promise are not supported.`\n\n  return `promise are not supported.\npromise found at: ${path.join(\"\")}`\n}\n\nconst createWeakSetAreNotSupportedMessage = ({ path }) => {\n  if (path.length === 0) return `weakSet are not supported.`\n\n  return `weakSet are not supported.\nweakSet found at: ${path.join(\"\")}`\n}\n\nconst createWeakMapAreNotSupportedMessage = ({ path }) => {\n  if (path.length === 0) return `weakMap are not supported.`\n\n  return `weakMap are not supported.\nweakMap found at: ${path.join(\"\")}`\n}\n\nconst createForbiddenFunctionMessage = ({ path }) => {\n  if (path.length === 0) return `function are not allowed.`\n\n  return `function are not allowed.\nfunction found at: ${path.join(\"\")}`\n}\n\nconst createForbiddenPropertyGetterMessage = ({\n  path,\n  propertyNameOrSymbol,\n}) => `property getter are not allowed.\ngetter found on property: ${String(propertyNameOrSymbol)}\nat: ${path.join(\"\")}`\n\nconst createForbiddenPropertySetterMessage = ({\n  path,\n  propertyNameOrSymbol,\n}) => `property setter are not allowed.\nsetter found on property: ${String(propertyNameOrSymbol)}\nat: ${path.join(\"\")}`\n\nconst createUnexpectedValueOfReturnValueMessage = () =>\n  `valueOf() must return a primitive of the object itself.`\n\nconst createUnknownSymbolMessage = ({\n  symbol,\n}) => `symbol must be global, like Symbol.iterator, or created using Symbol.for().\nsymbol: ${symbol.toString()}`\n\nconst createUnknownPrototypeMessage = ({ prototypeValue }) =>\n  `prototype must be global, like Object.prototype, or somewhere in the value.\nprototype constructor name: ${prototypeValue.constructor.name}`\n",
    "// be carefull because this function is mutating recipe objects inside the recipeArray.\n// this is not an issue because each recipe object is not accessible from the outside\n// when used internally by uneval\nexport const sortRecipe = (recipeArray) => {\n  const findInRecipePrototypeChain = (recipe, callback) => {\n    let currentRecipe = recipe\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      if (currentRecipe.type !== \"composite\") break\n      const prototypeIdentifier = currentRecipe.prototypeIdentifier\n      if (prototypeIdentifier === undefined) break\n      currentRecipe = recipeArray[prototypeIdentifier]\n\n      if (callback(currentRecipe, prototypeIdentifier)) return prototypeIdentifier\n    }\n    return undefined\n  }\n\n  const recipeArrayOrdered = recipeArray.slice()\n  recipeArrayOrdered.sort((leftRecipe, rightRecipe) => {\n    const leftType = leftRecipe.type\n    const rightType = rightRecipe.type\n\n    if (leftType === \"composite\" && rightType === \"composite\") {\n      const rightRecipeIsInLeftRecipePrototypeChain = findInRecipePrototypeChain(\n        leftRecipe,\n        (recipeCandidate) => recipeCandidate === rightRecipe,\n      )\n      // if left recipe requires right recipe, left must be after right\n      if (rightRecipeIsInLeftRecipePrototypeChain) return 1\n\n      const leftRecipeIsInRightRecipePrototypeChain = findInRecipePrototypeChain(\n        rightRecipe,\n        (recipeCandidate) => recipeCandidate === leftRecipe,\n      )\n      // if right recipe requires left recipe, right must be after left\n      if (leftRecipeIsInRightRecipePrototypeChain) return -1\n    }\n\n    if (leftType !== rightType) {\n      // if left is a composite, left must be after right\n      if (leftType === \"composite\") return 1\n      // if right is a composite, right must be after left\n      if (rightType === \"composite\") return -1\n    }\n\n    const leftIndex = recipeArray.indexOf(leftRecipe)\n    const rightIndex = recipeArray.indexOf(rightRecipe)\n    // left was before right, don't change that\n    if (leftIndex < rightIndex) return -1\n    // right was after left, don't change that\n    return 1\n  })\n\n  return recipeArrayOrdered\n}\n",
    "// https://github.com/joliss/js-string-escape/blob/master/index.js\n// http://javascript.crockford.com/remedial.html\nexport const escapeString = (value) => {\n  const string = String(value)\n  let i = 0\n  const j = string.length\n  var escapedString = \"\"\n  while (i < j) {\n    const char = string[i]\n    let escapedChar\n    if (char === '\"' || char === \"'\" || char === \"\\\\\") {\n      escapedChar = `\\\\${char}`\n    } else if (char === \"\\n\") {\n      escapedChar = \"\\\\n\"\n    } else if (char === \"\\r\") {\n      escapedChar = \"\\\\r\"\n    } else if (char === \"\\u2028\") {\n      escapedChar = \"\\\\u2028\"\n    } else if (char === \"\\u2029\") {\n      escapedChar = \"\\\\u2029\"\n    } else {\n      escapedChar = char\n    }\n    escapedString += escapedChar\n    i++\n  }\n  return escapedString\n}\n",
    "import { decompose } from \"./internal/decompose.js\"\nimport { sortRecipe } from \"./internal/sortRecipe.js\"\nimport { escapeString } from \"./internal/escapeString.js\"\n\nexport const uneval = (value, { functionAllowed = false, prototypeStrict = false } = {}) => {\n  const { recipeArray, mainIdentifier, valueMap } = decompose(value, {\n    functionAllowed,\n    prototypeStrict,\n  })\n  const recipeArraySorted = sortRecipe(recipeArray)\n\n  let source = `(function () {\nvar globalObject\ntry {\n  globalObject = Function('return this')() || (42, eval)('this');\n} catch(e) {\n  globalObject = window;\n}\n\nfunction safeDefineProperty(object, propertyNameOrSymbol, descriptor) {\n  var currentDescriptor = Object.getOwnPropertyDescriptor(object, propertyNameOrSymbol);\n  if (currentDescriptor && !currentDescriptor.configurable) return\n  Object.defineProperty(object, propertyNameOrSymbol, descriptor)\n};\n`\n\n  const variableNameMap = {}\n  recipeArray.forEach((recipe, index) => {\n    const indexSorted = recipeArraySorted.indexOf(recipe)\n    variableNameMap[index] = `_${indexSorted}`\n  })\n\n  const identifierToVariableName = (identifier) => variableNameMap[identifier]\n\n  const recipeToSetupSource = (recipe) => {\n    if (recipe.type === \"primitive\") return primitiveRecipeToSetupSource(recipe)\n    if (recipe.type === \"global-symbol\") return globalSymbolRecipeToSetupSource(recipe)\n    if (recipe.type === \"global-reference\") return globalReferenceRecipeToSetupSource(recipe)\n    return compositeRecipeToSetupSource(recipe)\n  }\n\n  const primitiveRecipeToSetupSource = ({ value }) => {\n    if (typeof value === \"string\") return `\"${escapeString(value)}\";`\n    if (Object.is(value, -0)) return \"-0;\"\n    return `${String(value)};`\n  }\n\n  const globalSymbolRecipeToSetupSource = (recipe) => {\n    return `Symbol.for(\"${escapeString(recipe.key)}\");`\n  }\n\n  const globalReferenceRecipeToSetupSource = (recipe) => {\n    const pathSource = recipe.path.map((part) => `[\"${escapeString(part)}\"]`).join(\"\")\n    return `globalObject${pathSource};`\n  }\n\n  const compositeRecipeToSetupSource = ({ prototypeIdentifier, valueOfIdentifier }) => {\n    if (prototypeIdentifier === undefined) return identifierToVariableName(valueOfIdentifier)\n\n    const prototypeValue = valueMap[prototypeIdentifier]\n    if (prototypeValue === null) return `Object.create(null);`\n\n    const prototypeConstructor = prototypeValue.constructor\n    if (prototypeConstructor === Object)\n      return `Object.create(${identifierToVariableName(prototypeIdentifier)});`\n\n    if (valueOfIdentifier === undefined) return `new ${prototypeConstructor.name}();`\n\n    return `new ${prototypeConstructor.name}(${identifierToVariableName(valueOfIdentifier)});`\n  }\n\n  recipeArraySorted.forEach((recipe) => {\n    const recipeVariableName = identifierToVariableName(recipeArray.indexOf(recipe))\n    source += `var ${recipeVariableName} = ${recipeToSetupSource(recipe, recipeVariableName)}\n`\n  })\n\n  const recipeToMutateSource = (recipe, recipeVariableName) => {\n    if (recipe.type === \"composite\")\n      return compositeRecipeToMutateSource(recipe, recipeVariableName)\n    return ``\n  }\n\n  const compositeRecipeToMutateSource = (\n    { propertyDescriptionArray, symbolDescriptionArray, methodDescriptionArray, extensible },\n    recipeVariableName,\n  ) => {\n    let mutateSource = ``\n\n    propertyDescriptionArray.forEach(({ propertyNameIdentifier, propertyDescription }) => {\n      mutateSource += generateDefinePropertySource(\n        recipeVariableName,\n        propertyNameIdentifier,\n        propertyDescription,\n      )\n    })\n\n    symbolDescriptionArray.forEach(({ symbolIdentifier, propertyDescription }) => {\n      mutateSource += generateDefinePropertySource(\n        recipeVariableName,\n        symbolIdentifier,\n        propertyDescription,\n      )\n    })\n\n    methodDescriptionArray.forEach(({ methodNameIdentifier, callArray }) => {\n      mutateSource += generateMethodCallSource(recipeVariableName, methodNameIdentifier, callArray)\n    })\n\n    if (!extensible) {\n      mutateSource += generatePreventExtensionSource(recipeVariableName)\n    }\n\n    return mutateSource\n  }\n\n  const generateDefinePropertySource = (\n    recipeVariableName,\n    propertyNameOrSymbolIdentifier,\n    propertyDescription,\n  ) => {\n    const propertyOrSymbolVariableName = identifierToVariableName(propertyNameOrSymbolIdentifier)\n\n    const propertyDescriptorSource = generatePropertyDescriptorSource(propertyDescription)\n    return `safeDefineProperty(${recipeVariableName}, ${propertyOrSymbolVariableName}, ${propertyDescriptorSource});`\n  }\n\n  const generatePropertyDescriptorSource = ({\n    configurable,\n    writable,\n    enumerable,\n    getIdentifier,\n    setIdentifier,\n    valueIdentifier,\n  }) => {\n    if (valueIdentifier === undefined) {\n      return `{\n  configurable: ${configurable},\n  enumerable: ${enumerable},\n  get: ${getIdentifier === undefined ? undefined : identifierToVariableName(getIdentifier)},\n  set: ${setIdentifier === undefined ? undefined : identifierToVariableName(setIdentifier)},\n}`\n    }\n\n    return `{\n  configurable: ${configurable},\n  writable: ${writable},\n  enumerable: ${enumerable},\n  value: ${valueIdentifier === undefined ? undefined : identifierToVariableName(valueIdentifier)}\n}`\n  }\n\n  const generateMethodCallSource = (recipeVariableName, methodNameIdentifier, callArray) => {\n    let methodCallSource = ``\n\n    const methodVariableName = identifierToVariableName(methodNameIdentifier)\n    callArray.forEach((argumentIdentifiers) => {\n      const argumentVariableNames = argumentIdentifiers.map((argumentIdentifier) =>\n        identifierToVariableName(argumentIdentifier),\n      )\n\n      methodCallSource += `${recipeVariableName}[${methodVariableName}](${argumentVariableNames.join(\n        \",\",\n      )});`\n    })\n\n    return methodCallSource\n  }\n\n  const generatePreventExtensionSource = (recipeVariableName) => {\n    return `Object.preventExtensions(${recipeVariableName});`\n  }\n\n  recipeArraySorted.forEach((recipe) => {\n    const recipeVariableName = identifierToVariableName(recipeArray.indexOf(recipe))\n    source += `${recipeToMutateSource(recipe, recipeVariableName)}`\n  })\n\n  source += `return ${identifierToVariableName(mainIdentifier)}; })()`\n\n  return source\n}\n"
  ],
  "names": [
    "isComposite",
    "value",
    "type",
    "compositeWellKnownMap",
    "WeakMap",
    "primitiveWellKnownMap",
    "Map",
    "getCompositeGlobalPath",
    "get",
    "getPrimitiveGlobalPath",
    "visitGlobalObject",
    "visitValue",
    "path",
    "has",
    "set",
    "visitProperty",
    "property",
    "descriptor",
    "Object",
    "getOwnPropertyDescriptor",
    "e",
    "name",
    "propertyValue",
    "getOwnPropertyNames",
    "forEach",
    "getOwnPropertySymbols",
    "symbol",
    "window",
    "global",
    "decompose",
    "mainValue",
    "functionAllowed",
    "prototypeStrict",
    "valueMap",
    "recipeArray",
    "valueToIdentifier",
    "existingIdentifier",
    "identifierForPrimitive",
    "undefined",
    "identifier",
    "identifierForNewValue",
    "primitiveToRecipe",
    "Promise",
    "Error",
    "createPromiseAreNotSupportedMessage",
    "WeakSet",
    "createWeakSetAreNotSupportedMessage",
    "createWeakMapAreNotSupportedMessage",
    "createForbiddenFunctionMessage",
    "identifierForComposite",
    "compositeGlobalPath",
    "createGlobalReferenceRecipe",
    "propertyDescriptionArray",
    "propertyName",
    "propertyDescriptor",
    "propertyNameIdentifier",
    "propertyDescription",
    "computePropertyDescription",
    "push",
    "symbolDescriptionArray",
    "symbolIdentifier",
    "toString",
    "methodDescriptionArray",
    "computeMethodDescriptionArray",
    "extensible",
    "isExtensible",
    "createCompositeRecipe",
    "propertyNameOrSymbol",
    "createForbiddenPropertySetterMessage",
    "createForbiddenPropertyGetterMessage",
    "configurable",
    "writable",
    "enumerable",
    "getIdentifier",
    "String",
    "setIdentifier",
    "valueIdentifier",
    "Set",
    "callArray",
    "entryValue",
    "index",
    "entryValueIdentifier",
    "methodNameIdentifier",
    "entryKey",
    "entryKeyIdentifier",
    "keys",
    "find",
    "existingValue",
    "is",
    "nextIdentifier",
    "currentIdentifier",
    "parseInt",
    "mainIdentifier",
    "prototypeValueToIdentifier",
    "prototypeValue",
    "prototypeExistingIdentifier",
    "prototypeIdentifier",
    "prototypeGlobalPath",
    "createUnknownPrototypeMessage",
    "getPrototypeOf",
    "identifierForValueOf",
    "Array",
    "length",
    "valueOf",
    "valueOfReturnValue",
    "createUnexpectedValueOfReturnValueMessage",
    "slice",
    "recipe",
    "valueOfIdentifier",
    "RegExp",
    "symbolToRecipe",
    "createPimitiveRecipe",
    "globalSymbolKey",
    "Symbol",
    "keyFor",
    "createGlobalSymbolRecipe",
    "symbolGlobalPath",
    "createUnknownSymbolMessage",
    "key",
    "join",
    "constructor",
    "sortRecipe",
    "findInRecipePrototypeChain",
    "callback",
    "currentRecipe",
    "recipeArrayOrdered",
    "sort",
    "leftRecipe",
    "rightRecipe",
    "leftType",
    "rightType",
    "rightRecipeIsInLeftRecipePrototypeChain",
    "recipeCandidate",
    "leftRecipeIsInRightRecipePrototypeChain",
    "leftIndex",
    "indexOf",
    "rightIndex",
    "escapeString",
    "string",
    "i",
    "j",
    "escapedString",
    "char",
    "escapedChar",
    "uneval",
    "recipeArraySorted",
    "source",
    "variableNameMap",
    "indexSorted",
    "identifierToVariableName",
    "recipeToSetupSource",
    "primitiveRecipeToSetupSource",
    "globalSymbolRecipeToSetupSource",
    "globalReferenceRecipeToSetupSource",
    "compositeRecipeToSetupSource",
    "pathSource",
    "map",
    "part",
    "prototypeConstructor",
    "recipeVariableName",
    "recipeToMutateSource",
    "compositeRecipeToMutateSource",
    "mutateSource",
    "generateDefinePropertySource",
    "generateMethodCallSource",
    "generatePreventExtensionSource",
    "propertyNameOrSymbolIdentifier",
    "propertyOrSymbolVariableName",
    "propertyDescriptorSource",
    "generatePropertyDescriptorSource",
    "methodCallSource",
    "methodVariableName",
    "argumentIdentifiers",
    "argumentVariableNames",
    "argumentIdentifier"
  ],
  "mappings": "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"
}